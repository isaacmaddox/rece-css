@use "./reset.scss";
@import url("https://fonts.googleapis.com/css2?family=Public+Sans:wght@100..900&family=Roboto+Mono:wght@100..700&display=swap");
// https://piccalil.li/blog/a-modern-css-reset/

:root {
  --background-body: #f6f6f6;
  --background: #e6e6e6;
  --background-darker: #e2e2e2;
  --background-transparent: #e6e6e6aa;
  --selection: #0001;
  --text: #333;
  --text-bright: #000;
  --text-muted: #555;
  --default-text: 18px;
  --large-text: calc(var(--default-text) + 1.2vw);
  --link: #20add8;
  --duration: 0.1s;
  --easing: ease;
  --placeholder: #888;
  --shadow: #0001;
  --focus: #20add8aa;

  --spacing: 1.75rem;
  --br: 0.25rem;

  // Custom colors
  --primary: #2c67e3;
  --clr-primary: #fff;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background-body: #181818;
    --background: #242424;
    --background-darker: #282828; //#313131
    --background-transparent: #242424aa;
    --selection: #fff1;
    --text: #ccc;
    --text-bright: #fff;
    --text-muted: #999;
    --link: #2993b3;
    --duration: 0.2s;
    --easing: ease;
    --placeholder: #aaa;
    --shadow: #0005;
    --focus: #2993b3aa;
  }
}

* {
  font-family: "Merriweather Sans", system-ui, Verdana, Geneva, Tahoma,
    sans-serif;
  font-weight: 400;
  font-size: var(--default-text);
  color: var(--text);
  box-sizing: border-box;
  transition: all var(--duration) var(--easing);

  &:focus {
    box-shadow: 0px 0px 0px 1px var(--focus);
    outline: none;
  }

  // Customization classes

  &.dim {
    color: var(--text-muted);
  }

  &.italic {
    font-style: italic;
  }

  &.shadow {
    box-shadow: 0px 3px 1rem var(--shadow);

    &:focus {
      box-shadow: 0px 3px 1rem var(--shadow), 0px 0px 0px 1px var(--focus);
    }
  }

  &.bold {
    font-weight: 500;
  }

  &.no-select {
    user-select: none;
  }

  &.font-sans {
    font-family: "Merriweather Sans", system-ui, Verdana, Geneva, Tahoma,
      sans-serif !important;
  }

  &.font-mono {
    font-family: "Roboto Mono", monospace !important;
  }

  &.color-bright {
    color: var(--text-bright) !important;
  }

  &.color-muted {
    color: var(--text-muted) !important;
  }

  &.color-default {
    color: var(--text) !important;
  }

  &.fw-light {
    font-weight: 300 !important;
  }

  &.fw-normal {
    font-weight: 400 !important;
  }

  &.fw-heavy {
    font-weight: 600 !important;
  }

  &.margin-top {
    margin-top: var(--spacing);

    &-2x {
      margin-top: calc(var(--spacing) * 2);
    }
  }
  &.margin-bottom {
    margin-bottom: var(--spacing);

    &-2x {
      margin-bottom: calc(var(--spacing) * 2);
    }
  }
  &.margin-left {
    margin-left: var(--spacing);

    &-2x {
      margin-left: calc(var(--spacing) * 2);
    }
  }
  &.margin-right {
    margin-right: var(--spacing);

    &-2x {
      margin-right: calc(var(--spacing) * 2);
    }
  }
  &.margin {
    margin: var(--spacing);

    &-2x {
      margin: calc(var(--spacing) * 2);
    }
  }
}

::selection {
  background: var(--selection);
}

::-webkit-scrollbar {
  background: var(--background-body);
  width: 10px;
  height: 10px;
}

::-webkit-scrollbar-thumb {
  background: var(--text-muted);

  &:hover {
    background: var(--text);
  }
}

body,
html {
  background-color: var(--background-body);
  scroll-behavior: smooth;
  scroll-padding-top: 100px;
}
html {
  padding: 24px;
}
body {
  width: clamp(1rem, 100%, 1000px);
  margin: 0 auto;
}

// Items are roughly ordered by the alphabet
a {
  color: var(--link);
  text-decoration: none;
  display: inline-block;

  &:hover,
  &:focus {
    text-decoration: underline;
  }

  &:active {
    transform: translateY(1px);
  }
}

blockquote {
  margin: calc(var(--spacing) * 2) var(--spacing);
  background: var(--background);
  width: fit-content;
  max-width: 95%;
  padding: var(--spacing);
  border-left: 3px solid var(--text-muted);
  font-weight: 500;

  cite {
    display: block;
    margin-top: var(--spacing);
    color: var(--text-muted);
    font-style: normal;

    &::before {
      content: "- ";
    }
  }
}

button,
input[type="button"],
input[type="submit"] {
  padding: calc(var(--spacing) / 3) calc(var(--spacing) / 1.5);
  border: none;
  cursor: pointer;
  background: var(--background);
  outline: none;
  border-radius: var(--br);
  color: var(--text);

  &:hover,
  &:focus {
    background: var(--background-darker);
    color: var(--text-bright);
  }

  &:active {
    transform: translateY(1px);
  }
}

code {
  display: block;
  margin: calc(var(--spacing) * 2) min(1vw, var(--spacing));
  background: var(--background);
  width: fit-content;
  max-width: 95%;
  padding: calc(var(--spacing) / 2);
  font-family: "Roboto Mono", monospace;
  color: var(--text-muted);
  font-size: 16px;
  font-style: normal;
  word-wrap: break-word;

  &.inline {
    display: inline-block;
    padding-block: calc(var(--spacing) / 4);
    margin: 0 1ch;
    vertical-align: middle;
  }
}

dialog {
  border: none;
  max-width: min(600px, calc(100% - 64px));
  max-height: calc(100% - 64px);
  padding: calc(var(--spacing) * 2) calc(var(--spacing) * 1.5);
  box-shadow: 0px 5px 3rem #0002;
  background: var(--background-body);
  border-radius: var(--br);

  &::backdrop {
    background: #0003;
    backdrop-filter: blur(5px);
  }

  & h2:first-child {
    margin-top: 0;
  }

  & p:last-child {
    margin-bottom: 0;
  }

  button:first-child {
    position: absolute;
    top: var(--spacing);
    right: var(--spacing);
    padding: 0;
    background: var(--background-body);
    box-shadow: none;

    &:active {
      transform: none;
    }

    &:hover,
    &:focus {
      color: var(--text-bright);
    }

    & + h2 {
      margin: 0;
    }
  }
}

@media (prefers-color-scheme: dark) {
  dialog::backdrop {
    background: #fff3;
  }
}

fieldset {
  width: clamp(1px, 500px, 100%);
  border: 1px solid var(--placeholder);
  padding: var(--spacing);
  border-radius: var(--br);

  & legend {
    padding-inline: calc(var(--spacing) / 2);
  }
}

footer {
  width: 100%;
  padding: calc(var(--spacing) / 2) 0;
  border-top: 2px solid var(--background);
  margin-top: var(--spacing);
}

form {
  width: 100%;

  & input[type="text"],
  & input[type="password"],
  & input[type="tel"],
  & input[type="number"] & input[type="address"] {
    width: 100%;
    display: block;
    margin-block: calc(var(--spacing) / 2);

    &:first-child {
      margin-top: 0;
    }
    &:last-child {
      margin-bottom: 0;
    }
  }

  & button,
  & input[type="button"],
  & input[type="submit"] {
    width: 100%;
  }
}

// h1 - h6

@for $i from 1 through 6 {
  h#{$i} {
    font-size: calc(var(--large-text) / ($i * 0.8) + 0.95rem);
    font-weight: max(calc(83 * (8 - $i)), 400);
    margin-block: calc(32px / ($i * 0.3));
    @if ($i >= 3) {
      color: var(--text);
    } @else {
      color: var(--text-bright);
    }
  }
}

header {
  padding-block: calc(var(--spacing) * 2);
  border-bottom: 3px solid var(--background);

  h1,
  h2,
  h3 {
    margin: 0;
  }
}

hr {
  border: 1px solid var(--background-darker);
  width: 85%;
  margin: calc(var(--spacing) * 1.5) 0;
}

input {
  padding: calc(var(--spacing) / 2) var(--spacing);
  border: 1px solid var(--background-darker);
  background: var(--background);
  display: inline-block;
  margin-block: 1rem;
  border-radius: var(--br);

  &:focus {
    background: var(--background-darker);
    color: var(--text-bright);
  }

  &::placeholder {
    color: var(--placeholder);
  }

  &.inline {
    display: inline-block;
    margin-block: 0;
  }

  &[type="button"],
  &[type="submit"] {
    min-width: unset;
  }
}

key {
  // Custom element
  padding: calc(var(--spacing) / 6) calc(var(--spacing) / 3);
  background: var(--background-darker);
  display: inline-block;
  font-family: monospace;
}

nav {
  width: 100%;
  background: var(--background-background);
  display: flex;
  overflow-x: auto;
  align-items: center;
  position: relative;
  white-space: nowrap;
  padding: calc(var(--spacing) / 2) 0;

  h2 {
    font-size: 1.5rem;
    margin-block: 0px;
    margin-right: calc(var(--spacing) * 2);
    background: var(--background-body);
    position: sticky;
    left: 0;
  }

  a {
    color: var(--text);
    margin-inline: calc(var(--spacing) / 2);

    &:hover {
      color: var(--text-bright);
    }

    &:first-of-type {
      margin-left: 0;
    }

    &:last-of-type {
      margin-right: 0;
    }
  }

  button {
    margin-left: calc(var(--spacing) * 2);
    padding: calc(var(--spacing) / 3) calc(var(--spacing) / 1.5);
  }

  &.fixed {
    position: sticky;
    top: 0;
    margin-bottom: 32px;
    border-bottom: 2px solid var(--background);
  }
}

p {
  line-height: 1.5;
  margin-block: calc(var(--spacing) / 2);
}

select {
  padding: calc(var(--spacing) / 3) calc(var(--spacing) / 1.75);
  background: var(--background);
  border: none;
  cursor: pointer;
  color: var(--text);
  border-radius: var(--br);

  &:hover,
  &:focus {
    background: var(--background-darker);
  }

  &:active {
    transform: translateY(1px);
  }

  optgroup {
    color: var(--text-bright);
    font-weight: 500;
  }
}

strong {
  font-weight: 500;
}

table {
  border: 1px solid var(--background);
  width: 100%;
  margin-block: var(--spacing);
  max-width: 100%;
  overflow-x: hidden;
  border-radius: var(--br);

  tr:nth-of-type(odd):not(:first-child) td {
    font-weight: 500;

    & * {
      font-weight: 500;
    }
  }

  th {
    font-weight: 700;
    padding: 16px;
    white-space: nowrap;
    color: var(--text-bright);
  }

  td {
    padding: 16px;
    text-align: center;
  }

  &.vertical td:nth-of-type(odd),
  &.vertical th:nth-of-type(odd) {
    background: var(--background);
  }

  &:not(.vertical) tr:nth-of-type(odd) {
    background: var(--background);
  }
}

.table_wrap {
  margin-block: var(--spacing);
  overflow: auto;
  max-height: 65vh;

  & table {
    margin-block: 0;
  }
}

textarea {
  background: var(--background);
  border: 1px solid var(--background-darker);
  min-width: min(400px, 100%);
  min-height: 200px;
  padding: 16px;
  transition: box-shadow var(--duration) var(--easing),
    background var(--duration) var(--easing);
  max-width: 100%;
  border-radius: var(--br);

  &:focus {
    background: var(--background-darker);
    color: var(--text-bright);
  }
}

@media (max-width: 500px) {
  code,
  blockquote {
    margin: var(--spacing) auto;
  }
  @for $i from 1 through 6 {
    h#{$i} {
      font-size: calc(var(--large-text) / ($i * 0.75) + 0.85rem);
      font-weight: max(calc(70 * (8 - $i)), 400);
      margin-block: calc(32px / ($i * 0.3));
      @if ($i >= 3) {
        color: var(--text);
      } @else {
        color: var(--text-bright);
      }
    }
  }
}
